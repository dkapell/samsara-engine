extends ../layout

include ../partials/gamestate

block content
    .row.my-3
        h2.d-inline-block Gamestate
            i.ml-2 #{gamestate.name}

        if gamestate.start
            h3
                .badge.badge-success.float-right.ml-2 Start
        if gamestate.special
            h3
                .badge.badge-info.float-right.ml-2 Special

        if gamestate.template
            h3
                .badge.badge-warning.float-right.ml-2 Template


    if checkPermission('creator')
        a.btn.btn-outline-info.mr-2(role="button" href='/gamestate/' + gamestate.id + '/edit')
            i.fas.fa-edit
            |  Edit Gamestate
        a.btn.btn-outline-danger.mx-2.delete-btn(role="button", url=`/gamestate/${gamestate.id}`, data-back='/gamestate')
            i.fas.fa-trash
            |  Delete Gamestate
        a.btn.btn-outline-success.mx-2(href=`/transition/new?from_state_id=${gamestate.id}`)
            span(class="fa fa-plus")
            |  New Transition

    h4.my-2 Player View
    .row.my-2
        .col-md-8.border-primary.border.rounded(style='min-height:200px;')
            +gamestate(gamestate, links)
        .col-md-4.d-none.d-md-block
            - let areaId = 0;
            while areaId < gamestate.map.length
                +areaCard(areaId, gamestate.map[areaId], gamestates, links, groups)
                - areaId++;

    if gamestate.links.length
        .row.my-2
            .col
                h4 Code-only Links
                ul.list-unstyled
                    for link in gamestate.links
                        li
                            strong.mr-1 #{link.name}
                            | (Code: #{link.code})

    if gamestate.transitions.from.length
        .row.my-2
            .col
                h4.my-2 Transitions From #{gamestate.name}
                    if checkPermission('creator')
                        a.btn.btn-outline-success.btn-sm.mx-2(
                            href=`/transition/new?from_state_id=${gamestate.id}`
                            role="button"
                            data-toggle="tooltip"
                            title=`New Transition from<br>${gamestate.name}`
                            data-html="true"
                        )
                            span(class="fa fa-plus")

                .row.row-cols-1.row-cols-md-2.row-cols-lg-3
                    for transition in gamestate.transitions.from
                        +transition(transition, gamestates, groups, gamestate)

    if gamestate.transitions.to.length
        .row.my-2
            .col
                h4.my-2 Transitions To #{gamestate.name}
                    if checkPermission('creator')
                        a.btn.btn-outline-success.btn-sm.mx-2(
                            href=`/transition/new?to_state_id=${gamestate.id}`
                            role="button"
                            data-toggle="tooltip"
                            title=`New Transition to<br>${gamestate.name}`
                            data-html="true"
                        )
                            span(class="fa fa-plus")
                .row.row-cols-1.row-cols-md-2.row-cols-lg-3
                    for transition in gamestate.transitions.to
                        +transition(transition, gamestates, groups, gamestate)



append scripts
    script(src='/javascripts/imagemap.js')
    script(src='/javascripts/gamestate.js')
