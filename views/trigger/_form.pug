include ../partials/gameactions

.form-group
    label.control-label(for="trigger_name") Name
    input.form-control(type="text",placeholder="Name",name="trigger[name]",value=trigger.name,id='trigger_name',required)
    div.invalid-feedback Please choose a valid name

.row.mb-2
    .col
        .custom-control.custom-switch
            input.custom-control-input(type="checkbox", name="trigger[run]", id="trigger_run", checked=trigger.run)
            label.custom-control-label(for="trigger_run") Execute on all qualifying players in a run

    .col
        .custom-control.custom-switch
            input.custom-control-input(type="checkbox", name="trigger[player]", id="trigger_player", checked=trigger.player)
            label.custom-control-label(for="trigger_player") Execute on a single qualifying player


.form-group
    label.control-label(for="trigger_description") Description
    textarea.form-control#trigger_description(name="trigger[description]",rows=3)
        = trigger.description

.form-group
    label.control-label(for="trigger_icon") Icon
    input.form-control(type="text",placeholder="Icon - FontAwesome class",name="trigger[icon]",value=trigger.icon,id='trigger_icon')
    div.invalid-feedback Please choose a valid icon class

fieldset.mb-2.border-secondary.border.p-2.rounded

    label Optional Criteria
    .row.mb-2
        .col
            label.control-label(for="trigger_group_id") For Group
            select.custom-select.area-input.area-group.select2(name='trigger[group_id]' id='trigger_group_id' )
                option(selected=!trigger.group_id value="-1") All
                for group in groups
                    option( value=group.id selected=trigger.group_id && Number(trigger.group_id)===group.id)= group.name
        .col
            label.control-label(for="trigger_condition") On Condition
            .input-group.trigger-condition
                - const conditionContents = trigger.condition?trigger.condition:''
                - const conditionLines = conditionContents.split('\n')

                input.form-control.script-display.border-light.script-editor-btn(
                    type="text"
                    value=conditionLines[0] + (conditionLines.length > 1?`...(+${conditionLines.length-1} more lines)`:''),
                    readonly
                )
                input.form-control.script-input.area-input.area-condition-data(
                    type="hidden"
                    name=`trigger[condition]`,
                    id='trigger_condition',
                    value=trigger.condition
                    data-fieldtype='condition'
                )
                .input-group-append
                    button.btn.btn-outline-light.script-editor-btn
                        i.fas.fa-edit


.form-group#map-group
    label.control-label.w-100#actions-heading(for="trigger_actions", data-toggle="collapse" data-target="#actions-container" aria-expanded="true") Actions
        .badge.badge-info.ml-1 #{trigger.actions.length} #{trigger.actions.length === 1?'item':'items'}
        button.btn.btn-sm.btn-outline-success.add-action-btn.expand-text-shown.ml-2(data-toggle="tooltip" title='Add Action' data-target='#trigger-actions' data-area=0)
                i.fa.fa-plus.mr-2
                | Add Action

        i.expand-text-shown.ml-4 (click to hide configuration)
        i.expand-text.ml-4 (click to show configuration)


        span.float-right.pl-2
            i.fa.fa-chevron-up
            i.fa.fa-chevron-down


    .div#actions-container.collapse.show(aria-labelledby="actions-heading")
        .list-group#trigger_actions
            .list-group-item.area-config(id=`trigger-actions`)
                - let actionId = 0;
                each action in trigger.actions
                    +action('trigger', 'trigger', action, 0, actionId)
                    - actionId++


.form-group
    button.btn.btn-primary(type="submit")= trigger.id?'Update':'Create'
    a.btn.btn-link(href="/trigger") Cancel

+action('trigger', 'trigger', {}, 'new', 'new')
+jsEditorModal()
