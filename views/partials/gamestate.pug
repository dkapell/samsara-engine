mixin gamestate(gamestate)
    if gamestate.showCode || (gamestate.codes && gamestate.codes.length)
        .d-flex.justify-content-center.mb-2
            .col-10.offset-1
                form#code-form
                    .alert.alert-warning.col-md-8.offset-md-2#code-feedback(role='alert')
                    input.form-control.rounded-pill.col-md-8.offset-md-2.bg-dark.text-light#code-entry(type="input", placeholder="Code")
    if gamestate.image_id
        .d-flex.justify-content-center.mb-1
            .lead.text-center#link-name &nbsp;
        .d-flex.justify-content-center.mb-1
            image.imageHolder.map.mx-auto.img-fluid#gamestate-image(src=gamestate.image.url, usemap='#gamestate-' + gamestate.id,style='max-height:60vh')
            map(name= 'gamestate-' + gamestate.id, id=`gamestate-${gamestate.id}` )
                for area in gamestate.map
                    area(
                        id=`area-${area.uuid?area.uuid:area.id}`,
                        shape=area.shape,
                        coords=area.coords,
                        data-name=`${area.name}`,
                        data-groups=`${area.name},all`,
                        data-gamestate-id=gamestate.id
                        data-area=area.uuid?area.uuid:area.id
                        href='#',
                        target="_self",
                        data-maphilight='{}'
                        )
    .row
        .col !{gamestate.description}


mixin transition(transition, gamestates, groups, current)
    - const fromState = _.findWhere(gamestates, {id: transition.from_state_id});
    - const toState = _.findWhere(gamestates, {id: transition.to_state_id});
    - moment.relativeTimeThreshold('ss', 0);

    .card.m-1
        .card-header
            if current.id !== fromState.id
                a(href=`/gamestate/${fromState.id}`)= fromState.name
            else
                | #{fromState.name}
            i.fas.fa-arrow-right.fa-fw.mx-1
            if current.id !== toState.id
                a(href=`/gamestate/${toState.id}`)= toState.name
            else
                | #{toState.name}

            if transition.type === 'gamestate' && checkPermission('creator')
                .float-right
                    a.btn.btn-sm.btn-outline-info(
                        role=button,
                        href=`/transition/${transition.id}`
                        data-toggle="tooltip"
                        title="Edit Transition"
                    )
                        i.fa.fa-edit

        .card-body
            dl.row.py-0.my-0
                dt.col-5 Source
                dd.col-7
                    strong

                    case transition.type
                        when 'map'
                            strong.mr-1 Map:
                            span.map-highlight(data-area=transition.areaId)
                                | #{transition.name}
                                i.fa.fa-search.ml-1
                        when 'gamestate'
                            if transition.link_id
                               strong.mr-1 Code:
                               i.ml-1 #{links[transition.link_id].code}
                            else
                                strong Manual

                dt.col-5 Delay
                dd.col-7
                    if transition.delay
                        = moment.duration(transition.delay, "seconds").humanize()
                    else
                        i None

                dt.col-5 Player Group
                dd.col-7
                    if transition.group_id
                        = _.findWhere(groups, {id: transition.group_id}).name
                    else
                        i All


