mixin htmlEditor(id, name, rows, size, contents)
    ul.nav.nav-tabs(id=`${id}-edit-tabs` role="tablist")
        li.nav-item(role="presentation")
            a.nav-link.active(
                id=`${id}-code-tab`
                data-toggle="tab"
                href=`#${id}-code`
                role="tab"
                aria-controls=`${id}-code`
                aria-selected="true"
            ) HTML
        li.nav-item(role="presentation")
            a.nav-link(
                id=`${id}-preview-tab`
                data-toggle="tab"
                href=`#${id}-preview`
                role="tab"
                aria-controls=`${id}-preview`
                aria-selected="false"
            ) Preview
        li.nav-item(role="presentation")
            a.nav-link(
                id=`${id}-liquid-tab`
                data-toggle="tab"
                href=`#${id}-liquid`
                role="tab"
                aria-controls=`${id}-liquid`
                aria-selected="false"
            ) Liquid
    .tab-content.py-2(id=`${id}-editor`)
        .tab-pane.fade.show.active(
            id=`${id}-code`
            role="tabpanel"
            aria-labelledby=`${id}-code-tab`
        )
            textarea.form-control.editor(
                id= id
                rows= rows
                name= name
                data-size= size
                data-type= 'html'
            )
                = contents

        .tab-pane.fade(
            id=`${id}-preview`
            role="tabpanel"
            aria-labelledby=`${id}-preview-tab`
        )
            .card.border-secondary
                .card-body.overflow-auto.editor-preview(
                    id=`${id}-preview-frame`
                    style=`height: ${size-2}px`)
        .tab-pane.fade(
            id=`${id}-liquid`
            role="tabpanel"
            aria-labelledby=`${id}-liquid-tab`
        )
            .row
                .col.px-4.py-2
                    p
                        | You can use HTML and
                        a.mx-1(href="https://shopify.github.io/liquid/" target="_blank") Liquid
                        | to enter text in this document.
            .row
                .col.px-4.py-2
                    table.table.table-sm
                        thead
                            tr
                                th Liquid Variable
                                th Usage
                        tbody
                            tr
                                td player
                                td Object which contains the player-visible player variables/data.
                                    br
                                    | e.g. {{ player.inventory[0].name }}
                            tr
                                td run
                                td Object which contains the player-visible run variables/data.
                                    br
                                    | e.g. {{ run.tokens }}
                            tr
                                td character
                                td String which contains the character's name.
                                    br
                                    | e.g. {{ character }}
                            tr
                                td user
                                td Object which contains the user data, currently just name.
                                    br
                                    | e.g. {{ user.name }}
                            tr
                                td gamestate
                                td Object which contains gamestate IDs as keys with the number of playes in that gamestate as values.  Only includes gamestates where user count is public.
                                    br
                                    |e.g.  {{gamestate.37|default: 0}} to display the number of players in gamestate 37, or '0', if not found.


mixin jsonEditor(id, name, rows, size, contents)
    textarea.form-control.editor(
        id= id
        rows= rows
        name= name
        data-size= size
        data-type= 'json',
        aria-describedby=`editor-feedback-${id}`
    )
        = !_.isNull(contents)?JSON.stringify(contents, null, 2):''
    .invalid-feedback(id=`editor-feedback-${id}`) Not Valid JSON




mixin jsEditor(id, name, rows, size, contents)
    ul.nav.nav-tabs(id=`${id}-edit-tabs` role="tablist")
        li.nav-item(role="presentation")
            a.nav-link.active(
                id=`${id}-code-tab`
                data-toggle="tab"
                href=`#${id}-code`
                role="tab"
                aria-controls=`${id}-code`
                aria-selected="true"
            ) Javascript
        li.nav-item(role="presentation")
            a.nav-link(
                id=`${id}-help-tab`
                data-toggle="tab"
                href=`#${id}-help`
                role="tab"
                aria-controls=`${id}-help`
                aria-selected="false"
            ) Help
        li.nav-item(role="presentation")
            a.nav-link(
                id=`${id}-engine-tab`
                data-toggle="tab"
                href=`#${id}-engine`
                role="tab"
                aria-controls=`${id}-engine`
                aria-selected="false"
            ) Engine Variables
        if variables.length
            li.nav-item(role="presentation")
                a.nav-link(
                    id=`${id}-variables-tab`
                    data-toggle="tab"
                    href=`#${id}-variables`
                    role="tab"
                    aria-controls=`${id}-variables`
                    aria-selected="false"
                ) Game Variables

    .tab-content.py-2(id=`${id}-editor`)
        .tab-pane.fade.show.active(
            id=`${id}-code`
            role="tabpanel"
            aria-labelledby=`${id}-code-tab`
        )
            .row
                .col
                    textarea.form-control.editor(
                        id= id
                        rows= rows
                        name= name
                        data-size= size
                        data-type= 'javascript'
                    )
                        = contents
            .row.mt-2
                .col
                    pre.text-danger.p-2.m-0.overflow-auto#editor-errors

        .tab-pane.fade(
            id=`${id}-help`
            role="tabpanel"
            aria-labelledby=`${id}-help-tab`
        )
            .row
                .col.p-2

                    h3 Conditionals
                    p Your conditional code should evaluate to true or false
                    pre.border.border-light.rounded.p-2
                        | private.statesVisited >= 20
                    h3 Scripts
                    p Scripts can manipulate data in data.public or data.private and change gamestate by altering output.to_state_id (and optionally output.delay).
                    pre.border.border-light.rounded.p-2
                        | if(!_.has(data.private, 'statesVisited')){
                        |     private.statesVisited = 0;
                        | }
                        | private.statesVisited++;
                        | output.console `Increased statesVisited by 1 for ${player} (${character})`;
        .tab-pane.fade(
            id=`${id}-engine`
            role='tabpanel'
            area-labelledby=`${id}-engine-tab`
        )
            .row
                .col.p-4
                    table.table.table-sm
                        thead
                            tr
                                th Variable
                                th Writable
                                th Usage
                        tbody
                            tr
                                td public
                                td Yes
                                td Object which contains the player-visible player variables/data.
                            tr
                                td private
                                td Yes
                                td Object which contains the non-player-visible player variables/data.
                            tr
                                td run.public
                                td Yes
                                td Object which contains the player-visible run variables/data
                            tr
                                td run.private
                                td Yes
                                td Object which contains the non-player-visible run variables/data
                            tr
                                td output
                                td Yes
                                td Object with output.to_state_id, output.delay. Set these to change the player state.
                            tr
                                td output.log("text")
                                td No
                                td Function to log text to the server console.
                            tr
                                td output.text("text", options)
                                td No
                                td Function to display text to the user.  <i>option</i> object has location (inline/popup/popout), duration (for inline), name, documentId (for documents)
                            tr
                                td output.link(id)
                                td No
                                td Function to open a link by ID
                            tr
                                td output.meeting(id)
                                td No
                                td Function to open a meeting by ID
                            tr
                                td output.image(id)
                                td No
                                td Function to open an image popup by ID
                            tr
                                td player
                                td No
                                td Contains the current player name.
                            tr
                                td character
                                td No
                                td Contains the current character name.
                            tr
                                td groups
                                td No
                                td Array of groups for the current player.
                            tr
                                td gamestate_id
                                td No
                                td Current gamestate id.
                            tr
                                td gamestates
                                td No
                                td Array of all gamestate objects.
                            tr
                                td jitsiActive
                                td No
                                td Boolean for if Jisti Server is available
                            tr
                                td _
                                td No
                                td
                                    a(href='http://underscorejs.org/' target='_blank') UnderscoreJS
                                    |  object for assorted helper fucntions

        .tab-pane.fade(
            id=`${id}-variables`
            role='tabpanel'
            area-labelledby=`${id}-variables-tab`
        )
            .row
                .col.p-4
                    table.table.table-sm
                        thead
                            tr
                                th Variable
                                th Type
                                th Scope
                                th Public
                        tbody
                            for variable in variables
                                tr
                                    td #{variable.player?'':'run.'}#{variable.public?'public':'private'}.#{variable.name}
                                    td #{variable.type}
                                    td #{variable.player?'Player':'Run'}
                                    td #{variable.public?'Yes':'No'}




mixin jsEditorModal(id, name, rows, size, contents)
     .modal.fade#editorModal(role="dialog" tabindex="-1" aria-labelledby="editorModalLabel" aria-hidden="true")
        .modal-dialog.modal-lg.modal-dialog-centered(role="document")
            .modal-content
                .modal-header
                    h5.modal-title Javscript Editor
                    button.close#dismissEditorModal(type="button", data-dismiss="modal" area-label="Close")
                        span(aria-hidden="true") &times;
                .modal-body
                    +jsEditor('js-editor', 'js-editor', 10, 300, null)

                .modal-footer
                    button.btn.btn-secondary(type="button", data-dismiss="modal") Close
                    button.btn.btn-primary#editor-save(type="button") Save


append styles
        link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/codemirror.min.css")

append scripts
    script(src='/javascripts/editor.js')
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/codemirror.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/mode/xml/xml.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/mode/javascript/javascript.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/mode/css/css.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/mode/htmlmixed/htmlmixed.min.js")
    script.
        $(function() {
            $('.editor').each(function() {
                const $this = $(this);
                const id = $this.attr('id');
                const type = $this.data('type');
                const size = $this.data('size');
                renderEditor(id, type, size);
            });
        });

